ABOUT
=====
The BGC Explorer is a python module written by Clint Cario as a rotation project for the Fischbach lab. 
It uses data downloaded from the JGI IMG database to cluster Biosynthetic Gene Clusters (BGCs) into 
families based on gene set similarity after BGCs have been filtered by certian criteria (typically taxa and function)

More information can be found in the rotation presentation: "Rotation Presentation/index.html"



INSTALLATION
============
1) Several python packages are required. Most can be installed with pip or easy_install (eg. easy_install munkres)
The following are required but should have been pre-installed with python:
	=> os
	=> sys
	=> subprocess
	=> tempfile
	=> threading
	=> shutil
	=> math
	=> json
	=> webbrowser
	-> SimpleHTTPServer
	=> SocketServer

The following should be installed by hand (using easy_install, pip, or OS specific package manager):
	=> numpy
	=> munkres
	=> peewee
	=> Bio (biopython)
	=> pprint

The following files are essential:
	=> BGCExplorer.py (the main script)
	=> BGC_models.py (the database definition file for peewee)
	=> Arrower.py (the BGC arrow generating script)

	Required, but not provided in the repo:
	=> BGC_Databaser.py (required to generated the database from original flat files)
	=> original/* (flat files used to generate the database)
		--- or ---
	=> data/BGCs.db (the database, which is generated by BGC_Databaser.py from flat files)



Usage
=====

Below, command line commands are prefixed with '$' and are run in main repository directory.
Otherwise commands should be run in a python interpreter (python / ipython) or script

Starting from scratch (not necessary if you have the BGCs.db file):
	In terminal:
	1) $ BGC_databaser.py

	In python:
	2) import BGCExplorer
	3) precompute_similarities(self):

Starting with a new DB filter:
	 1) import BGCExplorer
	 2) NRPS = BGCs(filters={'Kind':"NRPS"})  # Put your filters here (see filters.txt)
	*3) NRPS.compare_bgcs()                   # This will compare all filtered BGCs and store values in the DB
	*4) NRPS.augment()                        # Recommend but not required. Will get supplemental data on BGCs from NCBI
	 5) NRPS.cluster()                        # Perform the clustering based on filtering criteria and similarity comparisons
	 6) NRPS.visualize_clusters()             # Show the clustering results as a bubble plot in a web browser
			-- or --
		NRPS.visualize_network()              # Show the clustering results as a network in a web browser

	7) Make sure you close browser tabs or use Ctr+Alt/Apple+R to clear page cache between visualizations

* - Only needs to be performed once per filter set of BGCs

NOTE: There is no programmatic limit on the number of BGCs that can be visualized, but a network/cluster with more than 1,000 BGCs 
      is likely to have very poor performance. Likewise, in the network visualization, more than 1,000 edges will also cause performance issues.
      The 'verbose' mode (default = True) of the cluster() function will tell you the number of nodes/edges that you have selected. 

Advanced Usage:
	Initializing the filter object (step #2 above) sets parameters taht generate a SQL query that is used to filter the database. 
	The query is generated by the instance's db.build() method (Eg. NRPS.db.build()), which is then stored in db.query. If you 
	require more complex filters like boolean logic ones using OR, AND, or NOT, then you can specify your own SQL query to filter the database.
	To do this, simply replace the db.query sting with your own custom SQL query. You can build off of the one already present:
		Eg. NRPS.db.query = '''
								SELECT * FROM bgc
								INNER JOIN organism ON organism.organism_id = bgc.organism_id
								WHERE bgc.kind LIKE 'saccharide'
								AND bgc.kind NOT LIKE '%poly%'
								AND organism._genus LIKE 'Bacteroides'

							'''
	Information on the SQL query language can be found online. 

